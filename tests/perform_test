#!/usr/bin/ruby

require 'erb'
require 'date'

# This script will execute all tests
# Gather logs and gdb output if necessary
# And produce a nice HTML file showing all these informations. 
# It'll also output a quick console output for test results.



class Test 
	include ERB::Util
  	attr_accessor :name, :result, :log, :gdb_log

  	def initialize(dir,filename)  
  		@name = filename

  		IO.popen("#{dir}/#{filename}", :err=>[:child, :out]) { |f|
  			@log = f.read
  		}

  		@result = $?.to_i == 0 ? :success : :error

		# per test layout.
		@test = %{
			<a href="#<%= @name %>">
				<div style="width:200px;height:50px;float:left;background-color:<%= @result == :success ? "#44EE44" : "#EE4444" %>">
					<span> <%= @name %> </span> <br/>
					<span> Result: <%= @result %> </span>
				</div>
			</a>
		}

		@test_content = %{
			<p>
				<span id="<%= @name %>" > <%= @name %> : <%= @result %> </span> <br/>
				<pre>
<%= @log %>
				</pre>
				<br/>
				<pre>
<%= @gdb_log %>
				</pre>
			</p>
		}

  		p "Test: #{filename} #{@result}"
  	end

  	def render_short() 
  		ERB.new(@test).result(binding)
  	end

  	def render_long() 
		ERB.new(@test_content).result(binding)
  	end
end


class Tests 
	include ERB::Util
	attr_accessor :tests, :layout, :date

	def initialize()
		# Provide complete layout.
		@date = DateTime.now
		@layout = %{
			<html>
				<body>
				<h2> Test Results </h2>
				<h3> <%= @date.strftime('%A, %d %B %Y') %> </h3>
				<div style="width:800px" >
					<% for @test in @tests %>
						<%= @test.render_short() %>
					<% end %>
					<br style="clear: left"/>
				</div>
				<h2> Test Details </h2>
					<% for @test in @tests %>
						<%= @test.render_long() %>
					<% end %>
				</body>
			</html>

		}
		@tests = []
		for file in Dir["bin/test_*"] do
			p "#{Dir.pwd}/#{file}: starting ..."
			@tests << Test.new(Dir.pwd,file)
		end
	end

  	def render() 
  		ERB.new(@layout).result(binding)
  	end
end

Dir.mkdir("jsons") unless Dir.exist?("jsons");
Dir.mkdir("html") unless Dir.exist?("html");

File.open("#{Dir.pwd}/html/test.html",'w') { |f| 
	t = Tests.new()
	f.write t.render
}



